"""Database models."""

import uuid
from datetime import datetime
from typing import Optional
{% if config.orm == "sqlalchemy+alembic" %}
from sqlalchemy import Column, String, DateTime, Boolean, Text
from sqlalchemy.dialects.postgresql import UUID
from sqlalchemy.sql import func

from src.db.database import Base


class BaseModel(Base):
    """Base model with common fields."""
    
    __abstract__ = True
    
    id = Column(UUID(as_uuid=True), primary_key=True, default=uuid.uuid4)
    created_at = Column(DateTime(timezone=True), server_default=func.now())
    updated_at = Column(DateTime(timezone=True), onupdate=func.now())


{% if config.auth %}
class User(BaseModel):
    """User model."""
    
    __tablename__ = "users"
    
    email = Column(String(255), unique=True, nullable=False, index=True)
    password_hash = Column(String(255), nullable=False)
    is_active = Column(Boolean, default=True)
    is_superuser = Column(Boolean, default=False)
    first_name = Column(String(100))
    last_name = Column(String(100))
    
    def __repr__(self):
        return f"<User(id={self.id}, email={self.email})>"
{% endif %}


# Example model - replace with your actual models
class ExampleModel(BaseModel):
    """Example model - replace with your actual models."""
    
    __tablename__ = "examples"
    
    name = Column(String(255), nullable=False)
    description = Column(Text)
    is_active = Column(Boolean, default=True)
    
    def __repr__(self):
        return f"<ExampleModel(id={self.id}, name={self.name})>"
{% endif %}